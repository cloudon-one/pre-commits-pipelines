name: Infrastructure Checks

on:
  pull_request:
    paths:
      - '**.tf'
      - '**.tfvars'
      - '**.hcl'
      - 'Dockerfile'
      - '.github/workflows/**'
      - '.pre-commit-config.yaml'
  push:
    branches: [ main, master ]
    paths:
      - '**.tf'
      - '**.tfvars'
      - '**.hcl'
      - 'Dockerfile'
      - '.github/workflows/**'
      - '.pre-commit-config.yaml'

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1  # Required for Gitleaks to scan git history

      - name: Run Gitleaks
        run: |
          docker run --rm \
            -v $(pwd):/workspace \
            infra-checks:latest \
            gitleaks detect \
            --source=/workspace \
            --report-format=json \
            --report-path=gitleaks-report.json \
            --no-git

      - name: Check Gitleaks report
        id: gitleaks-check
        run: |
          if [ -f gitleaks-report.json ] && [ "$(cat gitleaks-report.json | jq length)" -gt 0 ]; then
            echo "::error::Gitleaks found potential secrets in the codebase"
            echo "GITLEAKS_ISSUES=true" >> $GITHUB_ENV
          else
            echo "No secrets found by Gitleaks"
            echo "GITLEAKS_ISSUES=false" >> $GITHUB_ENV
          fi

      - name: Upload Gitleaks report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks-report.json
          retention-days: 7

      - name: Comment PR with security results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
            script: |
              const fs = require('fs');
              let securityReport = '### üîí Security Scan Results\n\n';
              
              // Add Gitleaks results
              if (process.env.GITLEAKS_ISSUES === 'true') {
                securityReport += '‚ö†Ô∏è Gitleaks found potential secrets. Please review the artifacts.\n';
              } else {
                securityReport += '‚úÖ No secrets found by Gitleaks\n';
              }
              
              // Add other security results...
              securityReport += '‚úÖ TFSec scan completed\n';
              securityReport += '‚úÖ Detect-secrets scan completed\n\n';
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: securityReport
              });    
  
  infra-checks:
    name: Infrastructure Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and cache Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          load: true
          tags: infra-checks:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run pre-commit checks
        run: |
          docker run --rm -v $(pwd):/workspace infra-checks:latest

      - name: Run Terraform initialization
        if: success()
        run: |
          for dir in $(find . -type f -name "*.tf" -exec dirname {} \; | sort -u); do
            echo "Initializing Terraform in $dir"
            docker run --rm -v $(pwd):/workspace -w /workspace/$dir infra-checks:latest terraform init -backend=false
          done

      - name: Run Terraform validation
        if: success()
        run: |
          for dir in $(find . -type f -name "*.tf" -exec dirname {} \; | sort -u); do
            echo "Validating Terraform in $dir"
            docker run --rm -v $(pwd):/workspace -w /workspace/$dir infra-checks:latest terraform validate
          done

      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `#### Infrastructure Validation Results
            - ‚úÖ Pre-commit checks completed
            - ‚úÖ Terraform initialization completed
            - ‚úÖ Terraform validation completed

            *For detailed results, check the Actions tab.*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })