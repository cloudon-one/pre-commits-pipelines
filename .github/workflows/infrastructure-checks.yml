name: Infrastructure Checks

on:
  pull_request:
    paths:
      - '**.tf'
      - '**.tfvars'
      - '**.hcl'
      - 'Dockerfile'
      - '.github/workflows/**'
      - '.pre-commit-config.yaml'
  push:
    branches: [ main, master ]
    paths:
      - '**.tf'
      - '**.tfvars'
      - '**.hcl'
      - 'Dockerfile'
      - '.github/workflows/**'
      - '.pre-commit-config.yaml'

# Cancel any in-progress job or run
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for Gitleaks to scan git history

  tfsec:
    name: tfsec
    runs-on: ubuntu-latest
    steps:
    - name: Clone repo
      uses: actions/checkout@v4
    - name: tfsec
      uses: aquasecurity/tfsec-action@v1.0.3
      with:
        soft_fail: true
        version: latest
        additional_args: --no-color --format json --run-statistics --out string --format json

        ## COST ESTIMATION ##

  cost-estimation:
    name: Cost Estimation
    runs-on: ubuntu-latest
    # Only run on pull requests
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          fetch-depth: 1

      - name: Generate Infracost cost estimate baseline
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -e INFRACOST_API_KEY=${{ secrets.INFRACOST_API_KEY }} \
            infra-checks:latest \
            infracost breakdown --path=/workspace \
            --format=json \
            --out-file=/workspace/infracost-base.json

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 1

      - name: Generate Infracost diff
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -e INFRACOST_API_KEY=${{ secrets.INFRACOST_API_KEY }} \
            infra-checks:latest \
            infracost diff \
            --path=/workspace \
            --format=json \
            --compare-to=/workspace/infracost-base.json \
            --out-file=/workspace/infracost.json

      - name: Post Infracost comment
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -e INFRACOST_API_KEY=${{ secrets.INFRACOST_API_KEY }} \
            -e GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} \
            infra-checks:latest \
            infracost comment github --path=/workspace/infracost.json \
            --repo=${{ github.repository }} \
            --pull-request=${{ github.event.pull_request.number }} \
            --github-token=${{ secrets.GITHUB_TOKEN }} \
            --behavior=update

  infra-checks:
    name: Infrastructure Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for Git-based tools

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and cache Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          load: true
          tags: infra-checks:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run pre-commit checks
        id: precommit
        run: |
          # Initialize git configuration in the container
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace infra-checks:latest /bin/sh -c '
            git config --global --add safe.directory /workspace
            git config --global user.email "action@github.com"
            git config --global user.name "GitHub Action"
            pre-commit run --all-files
          '

      - name: Run TFLint with custom rules
        id: tflint
        run: |
          exit_code=0
          for dir in $(find . -type f -name "*.tf" -exec dirname {} \; | sort -u); do
            echo "Running TFLint in $dir"
            if ! docker run --rm -v $(pwd):/workspace -w /workspace/$dir infra-checks:latest tflint --format=compact; then
              echo "::error::TFLint failed in $dir"
              exit_code=1
            fi
          done
          exit $exit_code

      - name: Run Terraform initialization
        id: tf-init
        if: success() || failure()  # Run even if previous step failed
        run: |
          exit_code=0
          for dir in $(find . -type f -name "*.tf" -exec dirname {} \; | sort -u); do
            echo "Initializing Terraform in $dir"
            if ! docker run --rm -v $(pwd):/workspace -w /workspace/$dir infra-checks:latest terraform init -backend=false; then
              echo "::error::Terraform init failed in $dir"
              exit_code=1
            fi
          done
          exit $exit_code

      - name: Run Terraform validation
        id: tf-validate
        if: success() || failure()  # Run even if previous step failed
        run: |
          exit_code=0
          for dir in $(find . -type f -name "*.tf" -exec dirname {} \; | sort -u); do
            echo "Validating Terraform in $dir"
            if ! docker run --rm -v $(pwd):/workspace -w /workspace/$dir infra-checks:latest terraform validate; then
              echo "::error::Terraform validation failed in $dir"
              exit_code=1
            fi
          done
          exit $exit_code

      - name: Check for required providers
        id: check-providers
        if: success() || failure()  # Run even if previous step failed
        run: |
          exit_code=0
          for dir in $(find . -type f -name "*.tf" -exec dirname {} \; | sort -u); do
            echo "Checking required providers in $dir"
            if ! grep -q "required_providers" "$dir"/*.tf; then
              echo "::error::required_providers block missing in $dir"
              exit_code=1
            fi
          done
          exit $exit_code

      - name: Check workflow status
        if: always()
        run: |
          if [ "${{ steps.precommit.outcome }}" == "failure" ] || \
             [ "${{ steps.tflint.outcome }}" == "failure" ] || \
             [ "${{ steps.tf-init.outcome }}" == "failure" ] || \
             [ "${{ steps.tf-validate.outcome }}" == "failure" ] || \
             [ "${{ steps.check-providers.outcome }}" == "failure" ]; then
            echo "One or more infrastructure checks failed"
            exit 1
          fi
